<?xml version="1.0" encoding="UTF-8"?>
<!--Generated by Site-Server v6.0.0-11882-11882 (http://www.squarespace.com) on Tue, 19 Sep 2017 23:31:53 GMT
--><rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://www.rssboard.org/media-rss" version="2.0"><channel><title>Blog - First Step Coding</title><link>https://www.firststepcoding.com/blog/</link><lastBuildDate>Tue, 29 Aug 2017 14:43:12 +0000</lastBuildDate><language>en-US</language><generator>Site-Server v6.0.0-11882-11882 (http://www.squarespace.com)</generator><description></description><item><title>Dear Bootcamps: Raise Your Admissions Bars or Get Out of the Way</title><dc:creator>Andy Tiffany</dc:creator><pubDate>Tue, 29 Aug 2017 14:52:45 +0000</pubDate><link>https://www.firststepcoding.com/blog/dear-bootcamps-raise-your-admissions-bars-or-get-out-of-the-way</link><guid isPermaLink="false">57c22a12d1758e5dd82ca7e6:5848304bbe65942448e3c212:59a57d80a803bb6a72e21df3</guid><description><![CDATA[

  

  	
      
      
        
          
            
              <img class="thumb-image" alt="bootcamps-admissions-bar.png" data-image="https://static1.squarespace.com/static/57c22a12d1758e5dd82ca7e6/t/59a57eb9a803bb6a72e2316c/1504018111646/bootcamps-admissions-bar.png" data-image-dimensions="551x274" data-image-focal-point="0.5,0.5" data-load="false" data-image-id="59a57eb9a803bb6a72e2316c" data-type="image" src="https://static1.squarespace.com/static/57c22a12d1758e5dd82ca7e6/t/59a57eb9a803bb6a72e2316c/1504018111646/bootcamps-admissions-bar.png?format=1000w" />
            
          

          

        
      
      
    

  


<p>The abundance of coding bootcamps with low admissions standards is a ticking time bomb, and it’s already claiming casualties.</p><p>Effects of low admissions standards are most immediately felt by underprepared students who later become bootcamp dropouts or unemployable alumni. <strong>Beyond that, the feedback loop created by low entry standards is leading to wider harm across the industry.</strong></p><h2><strong>Who am I and why do I care?</strong></h2><p>Bootcamps have been my life for the past two years. I previously worked as instructor in the space, and then I left to found my own <a target="_blank" href="https://firststepcoding.com">program</a> designed to prepare and advise prospective bootcamp students. I’ve now advised hundreds of people through interviews and enrollments across over a dozen different programs at this point.</p><p>Alumni from my prep program typically experience one of three outcomes:</p><ul>
<li><p><span data-preserve-html-node="true"><strong>Ignition</strong>: After a lot of studying, coding eventually “clicks.” They realize they love it, and they make it through rigorous entry challenges into well-regarded bootcamps. We consider this to be an excellent outcome.</span></p>
</li>
<li><p><span data-preserve-html-node="true"><strong>Realization</strong>: Despite intense practice, even basic coding structures like for loops and if statements remain a struggle to apply practically. Eventually, these students come to accept that coding might not be the best career choice for them. This is also a great outcome, because the student has scratched an itch and come to a wise decision.</span></p>
</li>
<li><p><span data-preserve-html-node="true"><strong>Slow Failure</strong>: Coding remains a struggle, but the student is still intent on pressing forward. They fail coding challenges at selective programs, but they get excited when they are admitted to low-bar programs that still promise six-figure salaries. They take out loans to get started, and the struggle continues. At the end, they’re worse off than where they started.</span></p>
</li>
</ul>
<p>I try my best to prevent the third outcome, but it’s tough to talk someone out of sprinting toward a dream that millions of marketing dollars have cultivated. It’s painful to watch, and I want to do whatever I can to help.</p><p>At this point, I’m convinced that the most helpful step most bootcamps can take now to help with this problem is to collectively raise their admissions bars.</p><h2><strong>Low admissions bars aren’t doing students any favors.</strong></h2><p>Let’s be honest here: not everyone is cut out for being a software engineer, just like not everyone is cut out for being a rock star. When you admit a student into your bootcamp, you’re signaling that they show promise in this career. Your students deserve to be thoroughly evaluated before receiving this signal. Otherwise, you’re doing them a great injustice.</p><p>Letting in a student who isn’t adequately prepared will also impact other students in class. It allows for a large differential between your highest performing and lowest performing students. This will impede student collaboration, and it makes the job of teachers immensely more challenging.</p><p>Even more fundamentally, if your students have to spend 33% of their time at a bootcamp just getting down the basics, they will have far less time left in the program for learning the applicable skills that will actually make them employable.</p><h2><strong>Low admissions bars are also problematic for bootcamps and the industry at large.</strong></h2><p>Bootcamps ultimately live and die by their reviews and outcomes statistics. Large marketing budgets can compensate in the early stages, but in the long run, there’s no escaping it. Naturally, when the entry bar is low, the exit bar will be too. This means worse outcomes for your students and unsatisfied reviews eventually coming back your way.</p><p>On the larger scale, consider the thousands of underprepared bootcamp graduates pouring out into the world. Over time, this leads to diminished expectations from employers of what a bootcamp grad can be capable of, and eventually, it leads to closed doors. This does a huge injustice to the thousands of bootcamp graduates entering the market who truly <em>are</em> ready to deliver value as junior developers.</p><h2><strong>Minimum competencies for being admitted to a bootcamp</strong></h2><p>It would be wonderful if the industry could rally around this question and come up with a minimum standard. Personally, I would never advise someone to start a bootcamp (or admit them) until they were able to fluently use functions, looping, array of objects, and state variables to solve problems on the fly. A problem like <a target="_blank" href="https://medium.freecodecamp.org/before-you-code-remember-to-prep-for-your-coding-interview-2ccfb58147db?gi=d5a8d3921618">this one</a> should be easy for anyone admitted to a bootcamp.</p><p>It’s purely mechanical to know how to write a for loop when prompted, but it’s proof of a much greater competency to be able to understand when and how to use one based on a problem description.&nbsp;</p><h2><strong>Advice for prospective bootcamp students</strong></h2><p>If you’re thinking about joining a bootcamp, you might be on your way to a truly life-changing pivot. However, you should be confident you understand what you’re getting yourself into, and you should be sure you’re truly prepared. Here is my advice:</p><p>1. Talk to a few software engineers about their day-to-day. Does it sound like a routine you would like?</p><p>2. Talk to <strong>recent </strong>bootcamp alumni from programs you are considering. Most recent alumni will be very receptive to talking about their experience, especially if you’re willing to buy them a coffee. The “recent” part is also important because bootcamps change quickly. A program that was excellent a year ago might be terrible now.</p><p>3. Don’t go to a bootcamp that doesn’t make you solve a challenging coding problem to get in. Most likely, it’s not a place you want to be.</p><p>4. Prove to yourself that you’re truly ready by applying to some programs that have a reputation for being selective. Or, consider taking our <a target="_blank" href="https://www.firststepcoding.com/bootcamp-readiness-test">Bootcamp Readiness Test</a> (my company offers as a service at a break-even price).</p><p>5. Consider taking a <a target="_blank" href="https://www.firststepcoding.com">bootcamp prep course</a> before you get heavily invested in a bootcamp and potential career pivot.</p><p>6. Spend at least 100 hours coding, and be honest with yourself. Are you making steady progress? Are you having fun? If “Yes!” isn’t your instantaneous response to both of these questions, you might reconsider what you’re getting yourself into.</p><h2><strong>Some bootcamps are truly doing wonderful work for the world.</strong></h2><p>To end on a positive note, let me say clearly that I am a true believer in the bootcamp model. I’ve employed bootcamp grads, and I’ve been astounded with how much some bootcamps are able to transform their students.</p><p>There are a handful of bootcamps who are doing everything right and keep innovating to get their students on track for success. Props to you guys! If we haven’t spoken already, I’d love to get to know you. Feel free to reach out to me via andy@firststepcoding.com.</p><p>To everyone else, you’ve got two options:</p><ol><li>Adapt quickly, starting with your admissions bar. If you're looking for advice on how to approach this, feel free to reach out. I'm happy to offer my two cents, even anonymously if you prefer.<br /> </li><li>Fail, and clear the way for others doing this right. You’re doing more harm than good in the mean time.</li></ol>]]></description></item><item><title>Alumni Q&#x26;A: Jake Holtz On His Journey From First Step Coding to Hack Reactor</title><dc:creator>Mary Bergeron, SwitchUp</dc:creator><pubDate>Tue, 25 Jul 2017 17:10:26 +0000</pubDate><link>https://www.firststepcoding.com/blog/2017/7/25/alumni-qa-jake-holtz-on-his-journey-from-first-step-coding-to-hack-reactor</link><guid isPermaLink="false">57c22a12d1758e5dd82ca7e6:5848304bbe65942448e3c212:59777a63f14aa1a84a5bd21c</guid><description><![CDATA[

  

  	
      
      
        
          
            
              <img class="thumb-image" data-image="https://static1.squarespace.com/static/57c22a12d1758e5dd82ca7e6/t/59777bb4cd39c371b6b1bacc/1501002703434/" data-image-dimensions="300x300" data-image-focal-point="0.5,0.5" data-load="false" data-image-id="59777bb4cd39c371b6b1bacc" data-type="image" src="https://static1.squarespace.com/static/57c22a12d1758e5dd82ca7e6/t/59777bb4cd39c371b6b1bacc/1501002703434/?format=1000w" />
            
          

          

        
      
      
    

  


<p>For <a href="https://firststepcoding.com">First Step Coding</a> alumnus Jake Holtz, his interest in programming began in an unexpected place. Jake developed a love of languages and communication as an undergrad at U.C. Santa Cruz, and he went on to graduate with a B.A in Greek and Latin.</p><p>Jake’s first job after college allowed him to dabble with programming, and he realized that software development was the perfect way to combine his interests in language, technology and innovation.</p><p>First Step Coding seemed like the perfect starting point for Jake because he could try out programming in a classroom environment, and build the skills necessary to gain acceptance at a top bootcamp.</p><p>In an interview with <a href="http://www.switchup.org/?utm_source=FSC%20GuestPost">SwitchUp</a>, Jake talks more about how First Step Coding helped facilitate his career change. Check out the interview below, and read more FSC student stories and reviews on <a href="https://www.switchup.org/bootcamps/first-step-coding?utm_source=FSC%20GuestPost">SwitchUp</a>.</p><p><strong>1.)&nbsp;&nbsp; </strong><strong>After earning a B.A. from the University of California Santa Cruz, you made the decision to attend a bootcamp. What made you decide to pursue a career in software development?&nbsp;</strong></p><p><em>After college, I worked as a junior analyst for a small retail company. Having a significant amount of autonomy in my position, I began to create spreadsheet “apps” that automated daily tasks that I needed to perform. I’ve always had an innovative mindset, and so this, combined with my work experience led to a natural progression into computer development.</em></p><p><strong>2.)&nbsp;&nbsp; </strong><strong>How did you hear about First Step Coding? What made you decide to attend FSC before a bootcamp?&nbsp;</strong></p><p><em>At the beginning of 2016, I began going to meetups at Dev Bootcamp to get an introductory glimpse into computer programming. FSC hosted one of the meetups I attended, and I ultimately chose the program because of its unique approach that no other introductory program offers. FSC integrates traditional teaching with networking and meeting people from all sides of the Bay Area tech community. This is why FSC was so much more than just a “pre-bootcamp program” and why I ended up attended it and enjoying it.</em><strong>&nbsp;</strong></p><p><strong>3.) What was it like to go from a coding bootcamp prep program to a selective bootcamp like Hack Reactor?&nbsp;</strong></p><p><em>I try to be very strategic about decisions I make. I loved FSC, but because of the learning curve, I wasn’t sure I wanted to pursue programming. I spent the next few months continuing to study and finally got to a point of certainty. My friend connected me with a mutual friend who worked at Hack Reactor. I applied, and I was accepted.</em></p><p><strong>4.) How did First Step Coding prepare you for life in a bootcamp?&nbsp;</strong></p><p><em>FSC’s two-pronged approach [of teaching and networking/pairing with others] was integral to my success at Hack Reactor. FSC introduced me to the collaborative, pair-based learning model used in both bootcamps and in real world software engineering. While I continued to study after FSC, retrospectively, I definitely could not have applied to Hack Reactor without the skills gained from FSC.</em><strong>&nbsp;</strong></p><p><strong>5.) For you, what were the pros and cons of attending a bootcamp prep program before a bootcamp?</strong></p><p><em>PROS: Learning, networking, and a great way to decide if software engineering is right for you,</em></p><p><em>CONS: Education is expensive!</em></p><p><strong>6.) What challenges did you overcome to get to where you are?&nbsp;</strong></p><p><em>Developing resilience. One of the reasons Hack Reactor has such an extraordinary reputation is because of the intensity of their program. They overwhelm you with an extravagant amount of information and you basically have to teach yourself (with their help, of course). This process siphons out those unsuitable for the industry and creates a programmer ready to learn large amounts of advanced material in a short amount of time.</em></p><p><strong>7.) What are your goals and plans for the next 5 years?</strong></p><p><em>Between attending college and working as a Junior Analyst, I lived in northern Israel for a year. I fell in love with life there. My goal in 5 years is to work as a Software Engineer in Tel Aviv. There’s a huge demand for tech workers there– the tech community there is even colloquially known as “Silicon Wadi.” Waze, Viber, Fiverr, and Wix were all founded and are based there, and you have huge R&amp;D centers for Google, Microsoft, Intel, HP, and IBM.</em><strong>&nbsp;</strong></p><p><strong>8.) What advice do you have for people who are interested in attending a prep program before abootcamp?&nbsp;</strong></p><p><em>Great question. Three things:&nbsp;</em></p><p><em>FIRST: Do as much prep as you can before a bootcamp. There's so much to learn. Also, be smart about what you learn. If you want to be a Web Developer, it would be unwise to learn C or C++ as a first language. </em></p><p><em>SECOND: Make sure that computer programming is for you. I studied for six months before I was sure I wanted to go to a bootcamp.</em><br /><br /><em>THIRD: Be selective about your bootcamp. Bootcamps are like any other business in the sense that there are good ones and bad ones. I personally wouldn’t go to a lower tier college nor would I go to a lower tier bootcamp. It’s an investment.</em></p><p>Jake Holtz is a San Francisco based full stack software engineer focused on test-driven development and full stack JavaScript technologies. Having attended UC Santa Cruz with a degree in Greek and Latin languages, Jake has a fascination with languages as a medium for communication and functionality.<br /><br /><strong>Linkedin:</strong> <a target="_blank" href="https://linkedin.com/in/jahholtz">linkedin.com/in/jahholtz</a><br /><strong>GitHub:</strong> <a target="_blank" href="https://github.com/jakeholtz">github.com/jakeholtz</a><br /><strong>AngelList:</strong> <a target="_blank" href="https://angel.co/jahholtz">https://angel.co/jahholtz</a></p><p></p>]]></description></item><item><title>Before You Code, Remember to PREP for Your Bootcamp Coding Interview</title><dc:creator>Andy Tiffany</dc:creator><pubDate>Wed, 21 Dec 2016 18:49:02 +0000</pubDate><link>https://www.firststepcoding.com/blog/prep-for-your-coding-interview</link><guid isPermaLink="false">57c22a12d1758e5dd82ca7e6:5848304bbe65942448e3c212:58519170e6f2e14d4e5980b7</guid><description><![CDATA[

  

  	
      
      
        
          
            
              <img class="thumb-image" data-image="https://static1.squarespace.com/static/57c22a12d1758e5dd82ca7e6/t/585ace722e69cf2bd553960b/1482346104393/" data-image-dimensions="833x125" data-image-focal-point="0.5,0.5" data-load="false" data-image-id="585ace722e69cf2bd553960b" data-type="image" src="https://static1.squarespace.com/static/57c22a12d1758e5dd82ca7e6/t/585ace722e69cf2bd553960b/1482346104393/?format=1000w" />
            
          

          

        
      
      
    

  


<p><em>PREP</em> is a mnemonic for methodically solving coding problems. It expands to:&nbsp;<strong>P</strong>arameters, <strong>R</strong>eturn, <strong>E</strong>xample, <strong>P</strong>seudocode.&nbsp;</p><p>The mnemonic is new, but the underlying technique is battle tested. This is essentially a beginner-friendly version of <a target="_blank" href="https://en.wikipedia.org/wiki/Test-driven_development">test-driven development</a> that lends itself well to coding challenges.</p><p>Let’s get right to it and learn PREP through an example problem!&nbsp;We’ll use JavaScript, but this technique works for just about any programming language.</p><hr /><h1>Suppose your interviewer asks you...</h1><blockquote><strong><em>"Write a function that accepts a sentence and returns the longest word."</em></strong></blockquote><h2><strong>P</strong>arameters (Input)</h2><p dir="ltr">Most problems involve writing a function. In this step we need to determine what parameters our function should accept, and then we need to give them meaningful names.</p><p dir="ltr">Keywords like “takes in” or “accepts” in the problem statement will guide us here. If it’s unclear, we can also ask the interviewer for clarification. In our case, the statement “accepts a sentence” tells us the function should accept a single string parameter.</p><p dir="ltr">So, we have determined the <em>type</em> of our parameter, but what should we name it? &nbsp;It might sound simple, but good naming is a crucial programming skill, and it takes practice.&nbsp;We could call ours "sentenceString," but calling it "sentence" is more concise and still makes it clear we're dealing with a string.</p><p dir="ltr">Since this is our first step, we also need to think of a meaningful name for our function itself.&nbsp;In our case, "longestWord"<em>&nbsp;</em>is both concise and descriptive. Now that we've decided, we can write the shell for our function like this:</p><pre class="source-code"><span class="cm-keyword">function</span> <span class="cm-variable">longestWord</span>(<span class="cm-def">sentence</span>){

}</pre><h2><strong>R</strong>eturn (Output)</h2><p>What does this function <em>return</em>? Is it a number? A boolean? A string?</p><p>Remember: the value a function returns is not the same as what it might display in a print/log statement. Once again, we can look at the problem statement for clarification. “Returns the longest word"&nbsp;tells us that we're returning a <em>word, </em>and we know that words are strings. Let’s make this crystal clear by creating a variable to represent this return value and rigging up our function to return it. Even though we aren't returning the correct answer yet,&nbsp;we are set up to return the correct type. We have created a placeholder that will make the next steps easier.</p><pre class="source-code"><span class="cm-keyword">function</span> <span class="cm-variable">longestWord</span>(<span class="cm-def">sentence</span>){
  <span class="cm-keyword">var</span> <span class="cm-def">word</span> <span class="cm-operator">=</span> <span class="cm-string">"placeholder"</span>;
  
  <span class="cm-keyword">return</span> <span class="cm-variable-2">word</span>;
}</pre><h2><strong>E</strong>xample (Test)</h2><p>Even for expert developers, static code is harder to understand than running code.&nbsp;We want to make our code runnable and "alive"&nbsp;as soon as possible. We can breathe life into our function with an example test invocation.</p><p>We know that if our function accepts the sentence, "I saw a hippopotamus,"&nbsp;it <em>should</em> return the string “hippopotamus” once it’s properly working. But for now, we just want to see our placeholder value from the last step to confirm our code is runnable and setup correctly.</p><pre class="source-code"><span class="cm-keyword">function</span> <span class="cm-variable">longestWord</span>(<span class="cm-def">sentence</span>){
  <span class="cm-keyword">var</span> <span class="cm-def">word</span> <span class="cm-operator">=</span> <span class="cm-string">"placeholder"</span>;
  
  <span class="cm-keyword">return</span> <span class="cm-variable-2">word</span>;
}

<span class="cm-comment">// This should log "hippopotamus" once we finish the later steps</span>
<span class="cm-comment">// For now, it just logs "placeholder"</span>
<span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-variable">longestWord</span>(<span class="cm-string">"I saw a hippopotamus"</span>));</pre><h2><strong>P</strong>seudocode</h2><p>While it’s tempting to just dive in and start coding now, it would be too easy to get caught up in a detail that could distract from the bigger picture. We need to devise a strategy first, and <em>pseudocoding</em> is just the tactic for this. Pseudocode is simply a series of precise statements written in spoken language comments to describe we need to do.</p><pre class="source-code"><span class="cm-keyword">function</span> <span class="cm-variable">longestWord</span>(<span class="cm-def">sentence</span>){
  <span class="cm-comment">// Use a variable to keep track of the longest word so far.</span>
  <span class="cm-keyword">var</span> <span class="cm-def">word</span> <span class="cm-operator">=</span> <span class="cm-string">"placeholder"</span>;
  
  <span class="cm-comment">// Convert the sentence into an array of words, so we can easily iterate</span>
  <span class="cm-comment">// over each word.</span>
  
  <span class="cm-comment">// Loop through each of the words.</span>
  
  <span class="cm-comment">// If the length of the current word is greater than the longest so far,</span>
  <span class="cm-comment">// update our variable tracking the longest word.</span>
  
  <span class="cm-comment">// After we've looked at every word, return the tracking variable.</span>
  <span class="cm-keyword">return</span> <span class="cm-variable-2">word</span>;
}

<span class="cm-comment">// This should log "hippopotamus" once our function is working correctly.</span>
<span class="cm-comment">// Currently, it logs "placeholder"</span>
<span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-variable">longestWord</span>(<span class="cm-string">"I saw a hippopotamus"</span>));</pre><h2>We Have finished PREP. Now We Can Code!</h2><p>The four steps in PREP helped us clearly frame the problem and think about how to solve it. In truth, accurate framing is half the battle. Most interviewers will already be impressed to see our methodical approach. At this point, our goal is simply to write code that will make our examples/tests pass. We'll do this by encoding each of our pseudocode steps.</p><p>We know we've got a working solution when we can run our code and see the correct output.&nbsp;</p><pre class="source-code"><span class="cm-keyword">function</span> <span class="cm-variable">longestWord</span>(<span class="cm-def">sentence</span>){
  <span class="cm-comment">// Use a variable to keep track of the longest word so far.</span>
  <span class="cm-keyword">var</span> <span class="cm-def">longestWordSoFar</span> <span class="cm-operator">=</span> <span class="cm-string">""</span>;
  
  <span class="cm-comment">// Convert the sentence into an array of words, so we can easily iterate</span>
  <span class="cm-comment">// over each word.</span>
  <span class="cm-keyword">var</span> <span class="cm-def">wordArray</span> <span class="cm-operator">=</span> <span class="cm-variable-2">sentence</span>.<span class="cm-property">split</span>(<span class="cm-string">" "</span>);
  <span class="cm-keyword">var</span> <span class="cm-def">currentWord</span>;
 
  <span class="cm-comment">// Loop through each of the words.</span>
  <span class="cm-keyword">for</span> (<span class="cm-keyword">var</span> <span class="cm-def">i</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>; <span class="cm-variable-2">i</span> <span class="cm-operator">&lt;</span> <span class="cm-variable-2">wordArray</span>.<span class="cm-property">length</span>; <span class="cm-variable-2">i</span><span class="cm-operator">++</span>){
    <span class="cm-variable-2">currentWord</span> <span class="cm-operator">=</span> <span class="cm-variable-2">wordArray</span>[<span class="cm-variable-2">i</span>];
    <span class="cm-comment">// If the length of the current word is greater than the longest so far,</span>
    <span class="cm-comment">// update our variable tracking the longest word.</span>
    <span class="cm-keyword">if</span> (<span class="cm-variable-2">currentWord</span>.<span class="cm-property">length</span> <span class="cm-operator">&gt;</span> <span class="cm-variable-2">longestWordSoFar</span>.<span class="cm-property">length</span>){
      <span class="cm-variable-2">longestWordSoFar</span> <span class="cm-operator">=</span> <span class="cm-variable-2">currentWord</span>;
    }
  }
  
  <span class="cm-comment">// after we've looked at every word, return the tracking variable</span>
  <span class="cm-keyword">return</span> <span class="cm-variable-2">longestWordSoFar</span>;
}

<span class="cm-comment">// This should log "hippopotamus" once our function is working correctly.</span>
<span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-variable">longestWord</span>(<span class="cm-string">"I saw a hippopotamus"</span>));</pre><p>We're through the hardest part now, and we can breathe a sigh of relief that we've at least gotten to a working answer!&nbsp;At this point, there are just two more questions to think about:</p><ul><li>Are there any edge cases that would break the code? For example, do we need to take into account sentences that have a period at the end? We'll write more test cases for these edge cases, and fix the code if necessary.</li><li>Can we make the code cleaner or more efficient now? We should discuss ideas with the interviewer so they know our thoughts before risking breaking the solution.</li></ul><hr /><p>That's it! The process might seem overly mechanical at first, but trust me, it will become second nature - much like the steps in learning to drive. Even after programming for more than 12 years, this is still roughly the sequence I follow when I’m problem solving. I'll likely use formal testing frameworks instead of log statements, but the steps are the same.</p><p>Now you try it! Here are a few beginner-level problems you can practice with, in ascending order of difficulty:</p><ol><li>Suppose you have an array of string like [ “adios”, “bye”, “ciao” ]. Your task is to write a function called total_characters that accepts such an array as a parameter and returns the summed number of characters across all the strings in the array.<br /> </li><li>Write a function to flip a coin n times that returns the numbers of times a “heads” was flipped.<br /> </li><li>(From CoderByte)&nbsp;Using the JavaScript language, have the function alphabetSoup(str) take the str string parameter being passed and return the string with the letters in alphabetical order (ie. hello becomes ehllo). Assume numbers and punctuation symbols will not be included in the string.</li></ol><p>I’d love to see your solutions and provide feedback. Submit your answers in the comments and / or directly to answers@firststepcoding.com</p><p>PREP has already helped several First Step Coding learners ace their interviews, and I hope it helps you too. Happy coding!</p><p></p>]]></description></item><item><title>Bootcamp Prep: Courses to Get into a Top Coding Bootcamp</title><dc:creator>Andy Tiffany</dc:creator><pubDate>Wed, 07 Dec 2016 16:53:13 +0000</pubDate><link>https://www.firststepcoding.com/blog/bootcamp-prep</link><guid isPermaLink="false">57c22a12d1758e5dd82ca7e6:5848304bbe65942448e3c212:5848306559cc689daf2f5986</guid><description><![CDATA[

  

  	
      
      
        
          
            
              <img class="thumb-image" data-image="https://static1.squarespace.com/static/57c22a12d1758e5dd82ca7e6/t/58483bdb197aeab25ec14593/1481128929274/" data-image-dimensions="766x446" data-image-focal-point="0.5,0.5" data-load="false" data-image-id="58483bdb197aeab25ec14593" data-type="image" src="https://static1.squarespace.com/static/57c22a12d1758e5dd82ca7e6/t/58483bdb197aeab25ec14593/1481128929274/?format=1000w" />
            
          

          

        
      
      
    

  


<p>Coding bootcamps have been around since 2012. An estimated 18,300 people will complete bootcamps in 2016, up from 12,100 in 2015.</p><p>The prevalence of bootcamps has more recently given rise to a collection of "bootcamp prep" programs. In this article, we'll explore these programs and provide a survey of options currently available.</p><h2><strong>What purpose do bootcamp prep programs serve?</strong></h2><h3><strong>Overcome high admissions bars</strong></h3><p>The most powerful marketing assets bootcamps have at their disposal are successful outcomes. Therefore, bootcamps are motivated to filter for students likely to produce the best outcomes. They look at your work history, your academic track record, your personality, and your technical skills. <strong>Many of the most selective bootcamps actually won’t accept you unless you can prove you’re already capable of a certain level of coding and problem solving skills.</strong></p><p>So how do you improve your coding skills before you’re admitted to the bootcamp? You can do it on your own, or you can join a bootcamp prep program.&nbsp; There are many excellent free resources online like <a href="https://freecodecamp.com">Free Code Camp</a> and <a href="https://codecademy.com">CodeCademy</a>, and these are a great places to start. However, it’s important to understand that while learning to code is not rocket science, it does take hours of focus, dedication, and practice – just like mastering a musical instrument.&nbsp;</p><p>You’re not only going to need to decide what to study, but you’re going to need support when you get stuck, and you’re going to need a quiet place where you can stare at your screen as you grit your teeth through the hard problems you’ll grow the most from solving. Be honest with yourself, and consider these questions:</p><ul><li>Have I ever mastered a skill that takes hours of practice on my own?</li><li>Do I have a dedicated place where I can study for at least 12 hours per week as I’m preparing – without a distracting cat / chihuahua / hamster walking across the keyboard?</li><li>Do I have the self-discipline to study this without the structure of an instructor, organized curriculum, and a peer group?</li></ul><h3><strong>Maximize your bootcamp education’s value</strong></h3><p>No matter how good your instructors are, no one can handhold you all the way to mastery. Software engineering is a profession where the learning never ends – you’re never going to be working in a <a href="http://prog21.dadgum.com/154.html">domain that you fully understand</a>, and navigating this uncertainty is part of the game. It’s a skill that a good bootcamp should help you develop, but it’s going to require you to take the initiative to leverage all of your resources to build your solutions.</p><p><strong>Some bootcamps will accept you with very little coding experience, but it’s to your advantage to come in ahead of the curve</strong>. If you’re less prepared than your peers, then you may fall behind in the beginning, and it can be hard to catch up. On the other hand, if you come in at a higher bar then you will be able to explore more advanced topics while you’re still in the nest of your bootcamp. You’ll come out at a higher level with a better portfolio, and you’ll have a much easier time finding your first software engineering job.</p><h3><strong>If coding isn't right for you, find out quickly</strong></h3><p>Learning to code can most certainly change your life, but it’s also a major investment. Attending a full-time program is typically going to require:&nbsp; &nbsp;</p><ul><li>Quitting your job.</li><li>$10-25k in tuition.</li><li>6-10 months of forgone wages. Consider that it takes most people 3-6 months to find a job after finishing a bootcamp.</li></ul><p><strong>What if you went through all that only to find out you really aren’t so excited about a career in coding?</strong></p><p>"<a target="_blank" href="http://venturebeat.com/2015/03/15/heres-what-fail-fast-really-means/">Fail fast</a>"&nbsp;is a popular axiom of the startup world that you should consider for your own career path pivot. <strong>What you really want is to win, but the worst thing that can happen is to fail slowly.</strong> It’s costly in time, money, and lost opportunities. On the other hand, if you fail fast, then you’re able to learn a quick lesson and use it to fuel your next effort.</p><p>One advantage of doing a bootcamp prep program is it allows you to really start to understand what this journey is going to look like before you put all your chips on the table. Hopefully you decide you love coding, but it’s not a bad thing to figure out quickly if it’s not for you.</p><h2><strong>What factors should I consider in a bootcamp prep program?</strong></h2><h3><strong>Language &amp; Topics</strong></h3><p>The programming language used in your bootcamp prep program should align with the language that bootcamps you are considering use. The majority of programs today are JavaScript focused, but there are some good reasons you might decide you want to start with a different language.</p><p>Regardless of the language, a good prep program should truly assume no prior knowledge, and it should absolutely cover at least these introductory topics: boolean logic, arrays, objects/dictionaries, functions/methods, and problem solving techniques.&nbsp;</p><h3><strong>Bootcamp connections</strong></h3><p>Most bootcamp prep programs are connected to immersive coding schools. Others are decoupled but may have partners. If you’re already sure a specific immersive program would be the best for you, then you should sign up for a program attached to the school you want to attend. App Academy has one in SF and NY,&nbsp; Flatiron has one in NY, and Hack Reactor has an online program.</p><p>Now, if you’re still weighing your options and want exploring schools to be part of your prep program, consider a program like First Step Coding that is not attached to larger bootcamp. Programs like FSC will have multiple partner schools that provide you the opportunity to meet face-to-face with instructors and alumni from various schools. They will also likely offer credits to multiple programs.&nbsp;</p><h3><strong>Cost and education credits</strong></h3><p>Cost is a factor to consider, but consider the cost difference relative to the quality of the program and the overall cost of your coding education. Prep programs range from about $800 - $3,000. Online courses are generally less expensive, but they come with some tradeoffs.</p><p>Some programs also offer credits for continuing your coding education at an immersive bootcamp afterwards. Hack Reactor, App Academy, and Fullstack will let you credit the cost of their program toward their immersive program. First Step Coding will credit you $500 - $3,000 toward a number of different partner programs.&nbsp;</p><h3><strong>Online vs. in-person</strong></h3><p>Bootcamp prep programs come in three flavors:</p><ul><li><p><strong>Online – asynchronous</strong>. This is a class that you can participate in at your own pace. You’ll read through content online and then work through problems independently. For some people this flexibility is a huge advantage. For others, it fuels procrastination and makes it harder to stay motivated without the ceremony of a live class to keep you engaged.</p></li><li><p><strong>Online – live</strong>. This is a newer flavor of online education. You can join class from anywhere and you still get the experience of being able to interact with your instructor and classmates in real time. You will need to ensure you have an excellent internet connection and quiet place to join in from regularly.&nbsp;</p></li><li><strong>Classroom – live</strong>. This is the more traditional learning environment. The disadvantages are that you’re limited to attending what is geographically convenient for you, and you may need to commute. On the up side, you’ll likely have an easier time making friends, forming study groups, and feeling comfortable asking questions than you would in an online environment. You’ll also have the helpful ceremony of meeting in a physical space designed for learning and away from any distractions at home.</li></ul><h2><strong>What are my options?</strong></h2><p>Below is our filtered list of prep programs. We came across more programs than this, but we have a few qualifiers for what we list here:</p><ul><li>Led by instructors with professional coding experience.</li><li>Clearly active with upcoming classes scheduled.</li><li>Has run for at least 3 cycles.</li></ul><p>All of the programs listed happen to feature a JavaScript-based curriculum. Most of the programs also offer "guaranteed admission" to a bootcamp.&nbsp;We did not bother listing this guarantee because in many cases, it's just marketing. If you read the small print, this guarantee normally requires you to apply to specific list of programs, and at least one of the programs in the list will have a low bar for admissions. So it's not a bad guarantee to have, but it also doesn't carry much value.</p>
<table class="demo">
	<caption>Bootcamp Prep Programs</caption>
	<thead>
	<tr>
		<th>Program</th>
		<th>Locations</th>
		<th>Cost</th>
		<th>Credits</th>
		<th>Format</th>
		<th>Perks & Guarantees</th>
	</tr>
	</thead>
	<tbody>
	<tr>
      <td><a href="https://www.appacademy.io/prep" target="_blank">App Academy Prep - Live</a></td>
		<td>San Francisco,<br/>New York City</td>
		<td>$2,999</td>
		<td>$2,999 toward App Academy Immersive</td>
		<td>4 weeks<br/><br/>M-F 6:30-8:30pm<br/><br/>Problem sets between classes</td>
		<td>Connection to App Academy</td>
	</tr>
	<tr>
		 <td><a href="https://www.appacademy.io/prep/online" target="_blank">App Academy Prep - Online</a></td>
		<td>Online - asynchronous</td>
		<td>$1,999</td>
		<td>$1,999 toward App Academy Immersive</td>
		<td>Self-paced</td>
		<td>Connection to App Academy<br/><br/>Flexible work times</td>
	</tr>
	<tr>
	 <td><a href="https://www.firststepcoding.com" target="_blank">First Step Coding</a></td>
		<td>Austin,<br/>Boston,<br/>Chicago,<br/>Denver,<br/>Irvine,<br/>Los Angeles,<br/>Miami,<br/>New York,<br/>Philadelphia,<br/>Seattle,<br/>San Francisco,<br/>Silicon Valley,<br/>Washington, D.C.</td>
		<td>$1,499 - $2,000</td>
		<td>$1,500 toward Rithm School<br/><br/>$1,500 toward Startup Institute<br/><br/>$1,500 toward Launch Academy<br/><br/>$500 toward Learners Guild<br/><br/>$500 toward App Academy</td>
		<td>4 weeks<br/>M, W 6:30-9:30pm<br/><br/>Problem sets between classes<br/><br/>Slack support<br/><br/>4 hours 1:1 mentoring<br/><br/>Q & A sessions with bootcamp alumni</td>
		<td>5:1 student:teacher ratio<br/><br/>Pair-programming based curriculum<br/><br/>Happiness guaranteed w/ refund option</td>
	</tr>
	<tr>
		 <td><a href="https://www.fullstackacademy.com/bootcamp-prep" target="_blank">Fullstack Academy</a></td>
		<td>Chicago,<br/>New York City</td>
		<td>$2,750</td>
		<td>$1,500 toward Fullstack Immersive<br/><br/>$1,500 toward Grace Hopper</td>
		<td>4 weeks<br/><br/>M-Th 6:40-9:40pm</td>
		<td>Connection to Fullstack<br/></td>
	</tr>
	<tr>
		 <td><a href="http://www.hackreactor.com/prep-programs" target="_blank">Hack Reactor Prep</a></td>
		<td>Online - Live</td>
		<td>$795</td>
		<td>$795 toward Hack Reactor Immersive</td>
		<td>4 weeks<br/><br/>M-Th for 3 hours (morning and evening options available)</td>
      <td>Connection to Hack Reactor<br/><br/>Study from home convenience w/ the ability to still have the ceremony of a live course<br/></td>
	</tr>
	<tbody>
</table><p>In summary, bootcamp prep programs are a great way to explore coding and get to know the bootcamp scene before you fully commit. There are a number of good options – it’s just a matter of being honest with yourself and coming to understand what works best for you.&nbsp;</p>]]></description></item><item><title>SwitchUp Report: Are Coding Bootcamps Worth it?</title><dc:creator>Mary Bergeron, SwitchUp</dc:creator><pubDate>Sun, 27 Nov 2016 20:24:00 +0000</pubDate><link>https://www.firststepcoding.com/blog/are-coding-bootcamps-worth-it</link><guid isPermaLink="false">57c22a12d1758e5dd82ca7e6:5848304bbe65942448e3c212:585993721b631b0f1e633a61</guid><description><![CDATA[<p><a href="http://www.switchup.org/research/are-coding-bootcamps-worth-it-review">Top Takeaways from SwitchUp’s 2016 &nbsp;Coding Bootcamp Survey</a></p><p>In the past 5 years, Coding Bootcamps &amp; Immersive Courses have gone from an unconventional education option to a thriving industry. &nbsp;With the allure of high paying tech jobs and the recent announcement that <a href="http://www.npr.org/sections/ed/2015/10/14/448570520/federal-student-loans-for-coding-boot-camps">Federal Student Loans now cover some Coding Boot Camps</a>, it’s no wonder enrollment is soaring.</p><p>But are Programming Bootcamps worth the investment of time and money, and will you really graduate with the skills needed to land that Web Dev job? Many bootcamps claim you can, but with little industry regulation, and in light of <a href="http://www.inc.com/salvador-rodriguez/devschool-coding-bootcamps.html">recent scandals</a>, it can be hard to know if your investment will pay off. &nbsp;</p><p><a href="https://www.switchup.org/">SwitchUp</a>, a resource for prospective bootcamp students and alumni, was started to answer that question and shed more transparency on this new industry.</p><p>Over the past year, we have surveyed alumni and gathered information about coding bootcamp students and their experiences. After hearing from more than 1,000 students and alum, we’ve <a href="https://www.switchup.org/research/are-coding-bootcamps-worth-it-review">crunched the numbers</a> and published the results.<br /> </p><ol><li><strong>63% of graduates reported an increase in salary. Those who reported an increase saw their salary jump by an average of $22,700. </strong><br /><br />Bootcamp grads continue to report a salary increase overall, and this number is up from 59% last year. Grads are also seeing a bigger salary bump. Respondents in 2015 saw a salary increase reported an average increase of $18,101 within six months. This year, respondents saw an average increase of $22,700 after six months.<br /> </li><li><strong>Women are more prevalent in coding bootcamps than in Computer Science programs.</strong><p>Coding Bootcamps have been praised for adding diversity to tech, and this is definitely true when it comes to female programmers. In 2016, our data found that 43% of coding bootcamp grads were women, up from 41% in 2015. Conversely, just 12% of computer science grads are women.</p><p>Bootcamps have successfully proved that people from every background can make a career change into tech. It remains to be seen if computer science programs will made the same diversity gains in the future.</p></li><li><p><strong>Bootcamp Market Growth &amp; Evolution</strong></p><p>Have you noticed coding bootcamps popping up everywhere? The coding bootcamp market is booming; and we don’t see it slowing down anytime soon. Our survey looks at how the coding bootcamp market has grown (and continues to grow!) since 2013. &nbsp;</p><p>Be sure to read the full <a href="https://www.switchup.org/research/are-coding-bootcamps-worth-it-review">Survey Outcomes</a>&nbsp;here.</p></li></ol><h2>So are coding bootcamps worth it?</h2><p>It’s a complicated question, but if you are looking to get a job in the technology industry, our research says “Yes!” &nbsp;Technology is an amazing industry to be in, and can be very rewarding. but, before you take the leap into a full-on intensive course, you’ll need to do your research to make sure coding is right for you. We suggest you focus on a few things to get started:</p><h3>Know Your Career Goals</h3><p>Make sure you have a clear understanding of your own career goals and where you see yourself in the industry. Coding bootcamps now focus on a broad range of topics and languages, and the perfect bootcamp curriculum will depend on your individual needs. Spend some time researching different careers that students often land after attending a bootcamp, and decide which career paths are most appealing to you. Once you understand your career path, you can choose the right course.</p><h3>Do Your Homework</h3><p>Remember, before attending a bootcamp, research everything you can about the curriculum, teachers, and job support. &nbsp;Read student reviews, reach out to alumni, speak with an Instructor and Visit the school’s website (and the bootcamp location if you can).</p><p>To learn more about Coding Bootcamps and read alumni reviews, visit Switchup.org</p><p>We’d love to hear from you, even if it’s just to say hi. Email us anytime at <a href="mailto:info@switchup.org">info@switchup.org</a>, and Follow us on <a href="https://www.facebook.com/switchorg/posts/1774405439489563?notif_t=notify_me_page&amp;notif_id=1477407910283908">Facebook</a> for the latest updates.</p><p> </p>]]></description></item></channel></rss>